# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: build Maui.NET for android

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
          submodules: true      
    - name: Setup Keystore File
      run: |
        echo "${{ secrets.KEYSTORE_FILE }}" > myapp.keystore.asc
        gpg -d --passphrase "${{ secrets.KEYSTORE_PASSWORD_GPG }}" --batch myapp.keystore.asc > myapp.keystore          
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '2.0.x'
        source-url: https://nuget.pkg.github.com/YkeSmit1/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}        
    - name: Setup Java JDK
      uses: actions/setup-java@v4.0.0
      with:
        distribution: 'microsoft'
        java-version: '17'
      # Restore from cache the previously built ports. If cache-miss, download, build vcpkg.
    - name: Restore from cache and install vcpkg
      # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
      uses: lukka/run-vcpkg@v11
      # Now that vcpkg is installed, it is being used to run with desired arguments.
    - name: Install SQLiteCpp and nlohmann-json using vcpg      
      run: |
        $VCPKG_ROOT/vcpkg install SQLiteCpp:x64-windows
        $VCPKG_ROOT/vcpkg install nlohmann-json:x64-windows
        $VCPKG_ROOT/vcpkg integrate install
      shell: bash      
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2
    - name: build x64 .so files
      run: msbuild Engine\Engine.Android\Engine.Android.vcxproj /p:Configuration=Release /p:Platform=x64
    - name: build x86 .so files
      run: msbuild Engine\Engine.Android\Engine.Android.vcxproj /p:Configuration=Release /p:Platform=x86
    - name: build ARM .so files
      run: msbuild Engine\Engine.Android\Engine.Android.vcxproj /p:Configuration=Release /p:Platform=ARM
    - name: build ARM64 .so files
      run: msbuild Engine\Engine.Android\Engine.Android.vcxproj /p:Configuration=Release /p:Platform=ARM64      
    - name: Build
      run: dotnet build Maui.BidTrainer\Maui.BidTrainer.csproj -c Release -f net8.0-android /p:AndroidSigningKeyStore=myapp.keystore /p:AndroidSigningKeyAlias=ysmitactionskey /p:AndroidSigningKeyPass="${{ secrets.KEYSTORE_PASSWORD }}" /p:AndroidSigningStorePass="${{ secrets.KEYSTORE_PASSWORD_ALIAS }}"
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.6
      with:
        path: |
          ./**/*.aab
          ./**/*.apk
